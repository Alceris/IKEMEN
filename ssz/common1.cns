
[Statedef 0]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(
      (`animno != 0 && `animno != 5)
      || (`animno == 5 && `trAnimTime()$.v.toInt() == 0))
    {
      `trChangeAnim(0);
    }
    if(`stVal.time == 0) `setYV(0.0);
    if(#`sysfvar[.fVX] < 2.0 || `stVal.time == 4) `setXV(0.0);
    if(`sysivar[.iLIFE] <= 0){
      `trChangeState(5050, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `sprpriority = 0;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 10]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0) .v.setF(0.75)$`trVelMulX();
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(11, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::C;
  `stVal.phy = .StTy::C;
  `trChangeAnim(10);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 11]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`animno == 5 && `trAnimTime()$.v.toInt() == 0) `trChangeAnim(11);
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::C;
  `stVal.phy = .StTy::C;
  `trChangeAnim(11);
  `sprpriority = 0;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 12]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(0, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `trChangeAnim(12);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 20]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`trCommand("holdfwd")$.v.isTrue()){
      `setXV(`sysfvar[.fWALK_FWD]);
    }
    if(`trCommand("holdback")$.v.isTrue()){
      `setXV(`sysfvar[.fWALK_BACK]);
    }
    if(
      `sysfvar[.fVX] > 0.0 && (
        (`animno != 20 && `animno != 5)
        || (`animno == 5 && `trAnimTime()$.v.toInt() == 0)))
    {
      `trChangeAnim(20);
    }
    if(
      `sysfvar[.fVX] < 0.0 && (
        (`animno != 21 && `animno != 5)
        || (`animno == 5 && `trAnimTime()$.v.toInt() == 0)))
    {
      `trChangeAnim(21);
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `sprpriority = 0;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 40]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0) `sysivar[1] = 0;
    if(`trCommand("holdfwd")$.v.isTrue()) `sysivar[1] = 1;
    if(`trCommand("holdback")$.v.isTrue()) `sysivar[1] = -1;
    if(`trAnimTime()$.v.toInt() == 0){
      branch{
      cond `stVal.prevno == 100 && `sysivar[1] == 1:
        `setXV(`sysfvar[.fRUNJUMP_FWDX]);
      else:
        `setXV(
          `sysivar[1] == 0 ? `sysfvar[.fJUMP_NEUX] : (
            `sysivar[1] == 1 ? `sysfvar[.fJUMP_FWD] : `sysfvar[.fJUMP_BACK]));
      }
      `setYV(`sysfvar[.fJUMP_NEUY]);
      `trChangeState(50, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `trChangeAnim(40);
  `setCtrl(false);
  `sprpriority = 1;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 45]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    branch{
    cond #`getAction(44) > 0:
      `trChangeAnim(44);
    else:
      `trChangeAnim(41);
    }
    if(`stVal.time == 0) `sysivar[1] = 0;
    if(`trCommand("holdfwd")$.v.isTrue()) `sysivar[1] = 1;
    if(`trCommand("holdback")$.v.isTrue()) `sysivar[1] = -1;
    if(`stVal.time == 2){
      `setXV(
        `sysivar[1] == 0 ? `sysfvar[.fAIRJUMP_NEUX] : (
          `sysivar[1] == 1
          ? `sysfvar[.fAIRJUMP_FWD] : `sysfvar[.fAIRJUMP_BACK]));
      `setYV(`sysfvar[.fAIRJUMP_NEUY]);
      `trChangeState(50, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `setCtrl(false);
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 50]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `sysivar[1] = 0;
      `trChangeAnim(
        `sysfvar[.fVX] == 0.0 ? 41 : (`sysfvar[.fVX] > 0.0 ? 42 : 43));
    }
    if(
      --`stVal.ps[0].p <= 0
      && `sysfvar[.fVY] > -2.0 && #`getAction(`animno + 3) > 0)
    {
      .v.setI(0)$`trSetPersistent(`stVal.ps[0].p=);
      `trChangeAnim(`animno + 3);
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::A;
  `stVal.ps.new(1);
  `stVal.ps[0].p = 0;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 51]
SSZ_CODE:
void c.Char::s##_@@P()
{
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::A;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 52]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    switch(`stVal.time){
    case 0:
      `setYV(0.0);
      .v.setF(0.0)$`trSetY();
    case 3:
      `setCtrl(true);
    }
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(0, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `setCtrl(false);
  `trChangeAnim(47);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 100]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    `setXV(`sysfvar[.fRUN_FWDX]);
    `sysivar[.iSPECIALFLAG] |= .lsNOWALK | .lsNOAUTOTURN;
    if(`trCommand("holdfwd")$!.v.isTrue()){
      `trChangeState(0, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `trChangeAnim(100);
  `sprpriority = 1;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 105]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    switch(`stVal.time){
    case 0:
      `setXV(`sysfvar[.fRUN_BACKX]);
      `setYV(`sysfvar[.fRUN_BACKY]);
    case 2:
      `setCtrl(true);
    }
    if(`sysfvar[.fVY] > 0.0 && `sysfvar[.fY] >= 0.0){
      `trChangeState(106, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::A;
  `setCtrl(false);
  `trChangeAnim(105);
  `sprpriority = 1;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 106]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    switch(`stVal.time){
    case 0:
      `setYV(0.0);
      .v.setF(0.0)$`trSetY();
    case 2:
      `makeDust(-5.0, -2.0);
    case 7:
      `trChangeState(0, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `setCtrl(false);
  `trChangeAnim(47);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 110]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `setCtrl(false);
      `trChangeAnim(110);
      `stVal.hb.hitf1 = 9351;
      `stVal.hb.hitt1 = 30;
      `setXV(0.0);
    }
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(0, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 115]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `setCtrl(false);
      `trChangeAnim(110);
      `stVal.hb.hitf1 = 9351;
      `stVal.hb.hitt1 = 30;
      `setXV(0.0);
    }
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(0, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 120]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `trChangeAnim(
        120 + (int)(`stVal.typ == .StTy::C) + (int)(`stVal.typ == .StTy::A)*2);
      switch(`stVal.typ){
      case .StTy::S:
        `stVal.phy = .StTy::S;
      case .StTy::C:
        `stVal.phy = .StTy::C;
      case .StTy::A:
        `stVal.phy = .StTy::A;
      }
    }
    switch(`stVal.typ){
    case .StTy::S:
      if(`trCommand("holddown")$.v.isTrue()){
        `stVal.typ = .StTy::C;
        `stVal.phy = .StTy::C;
      }
    case .StTy::C:
      if(`trCommand("holddown")$!.v.isTrue()){
        `stVal.typ = .StTy::S;
        `stVal.phy = .StTy::S;
      }
    }
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(
        130 + (int)(`stVal.typ == .StTy::C) + (int)(`stVal.typ == .StTy::A)*2,
        -1, -1);
      ret;
    }
    if(`trCommand("holdback")$!.v.isTrue() || !`inguarddist){
      `trChangeState(140, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 130]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`animno != 130) `trChangeAnim(130);
    if(`trCommand("holddown")$.v.isTrue()){
      `trChangeState(131, -1, -1);
      ret;
    }
    if(`trCommand("holdback")$!.v.isTrue() || !`inguarddist){
      `trChangeState(140, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 131]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`animno != 131) `trChangeAnim(131);
    if(`trCommand("holddown")$!.v.isTrue()){
      `trChangeState(130, -1, -1);
      ret;
    }
    if(`trCommand("holdback")$!.v.isTrue() || !`inguarddist){
      `trChangeState(140, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::C;
  `stVal.phy = .StTy::C;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 132]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`animno != 132) `trChangeAnim(132);
    .v.setF(`sysfvar[.fYACCEL])$`trVelAddY();
    `sysivar[0] = (int)(`sysfvar[.fY] >= 0.0 && `sysfvar[.fVY] > 0.0);
    if(`sysivar[0] != 0){
      `setYV(0.0);
      .v.setF(0.0)$`trSetY();
      if(`trCommand("holdback")$.v.isTrue() && `inguarddist){
        `trChangeState(130, -1, -1);
        ret;
      }
      `trChangeState(52, -1, -1);
      ret;
    }
    if(`trCommand("holdback")$!.v.isTrue() || !`inguarddist){
      `trChangeState(140, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 140]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `trChangeAnim(
        140 + (int)(`stVal.typ == .StTy::C) + (int)(`stVal.typ == .StTy::A)*2);
      switch(`stVal.typ){
      case .StTy::S:
        `stVal.phy = .StTy::S;
      case .StTy::C:
        `stVal.phy = .StTy::C;
      case .StTy::A:
        `stVal.phy = .StTy::A;
      }
    }
    switch(`stVal.typ){
    case .StTy::S:
      if(`trCommand("holddown")$.v.isTrue()){
        `stVal.typ = .StTy::C;
        `stVal.phy = .StTy::C;
      }
    case .StTy::C:
      if(`trCommand("holddown")$!.v.isTrue()){
        `stVal.typ = .StTy::S;
        `stVal.phy = .StTy::S;
      }
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `setCtrl(true);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}

[Statedef 150]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    `trChangeAnim(150);
    if(`trHitShakeOver()$.v.isTrue()){
      `trChangeState(151 + `trCommand("holddown")$(.v.toInt()*2), -1, -1);
      ret;
    }
    switch(`stVal.typ){
    case .StTy::S:
      if(`trCommand("holddown")$.v.isTrue()){
        `stVal.typ = .StTy::C;
        `stVal.phy = .StTy::C;
      }
    case .StTy::C:
      if(`trCommand("holddown")$!.v.isTrue()){
        `stVal.typ = .StTy::S;
        `stVal.phy = .StTy::S;
      }
    }
    if(`stVal.time == 0){
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 151]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0) `trHitVelSetX();
    if(`stVal.time == `stVal.hb.slidetime || `stVal.hb.hittime <= 0){
      `setXV(0.0);
    }
    if(`stVal.time == `stVal.hb.ctrltime) `setCtrl(true);
    switch(`stVal.typ){
    case .StTy::S:
      if(`trCommand("holddown")$.v.isTrue()){
        `stVal.typ = .StTy::C;
        `stVal.phy = .StTy::C;
      }
    case .StTy::C:
      if(`trCommand("holddown")$!.v.isTrue()){
        `stVal.typ = .StTy::S;
        `stVal.phy = .StTy::S;
      }
    }
    if(`stVal.hb.hittime <= 0){
      `trChangeState(130, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `trChangeAnim(150);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 152]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    `trChangeAnim(151);
    if(`trHitShakeOver()$.v.isTrue()){
      `trChangeState(151 + `trCommand("holddown")$(.v.toInt()*2), -1, -1);
      ret;
    }
    switch(`stVal.typ){
    case .StTy::S:
      if(`trCommand("holddown")$.v.isTrue()){
        `stVal.typ = .StTy::C;
        `stVal.phy = .StTy::C;
      }
    case .StTy::C:
      if(`trCommand("holddown")$!.v.isTrue()){
        `stVal.typ = .StTy::S;
        `stVal.phy = .StTy::S;
      }
    }
    if(`stVal.time == 0){
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::C;
  `stVal.phy = .StTy::N;
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 153]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0) `trHitVelSetX();
    if(`stVal.time == `stVal.hb.slidetime || `stVal.hb.hittime <= 0){
      `setXV(0.0);
    }
    if(`stVal.time == `stVal.hb.ctrltime) `setCtrl(true);
    switch(`stVal.typ){
    case .StTy::S:
      if(`trCommand("holddown")$.v.isTrue()){
        `stVal.typ = .StTy::C;
        `stVal.phy = .StTy::C;
      }
    case .StTy::C:
      if(`trCommand("holddown")$!.v.isTrue()){
        `stVal.typ = .StTy::S;
        `stVal.phy = .StTy::S;
      }
    }
    if(`stVal.hb.hittime <= 0){
      `trChangeState(131, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::C;
  `stVal.phy = .StTy::C;
  `trChangeAnim(151);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}

[Statedef 154]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    `trChangeAnim(152);
    if(`trHitShakeOver()$.v.isTrue()){
      `trChangeState(155, -1, -1);
      ret;
    }
    if(`stVal.time == 0){
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 155]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `trHitVelSetX();
      `trHitVelSetY();
    }
    .v.setF(`sysfvar[.fYACCEL])$`trVelAddY();
    if(`stVal.time == `stVal.hb.ctrltime) `setCtrl(true);
    `sysivar[0] = (int)(`sysfvar[.fY] >= 0.0 && `sysfvar[.fVY] > 0.0);
    if(`sysivar[0] != 0){
      `setYV(0.0);
      .v.setF(0.0)$`trSetY();
      if(`trCommand("holdback")$.v.isTrue() && `inguarddist){
        `trChangeState(130, -1, -1);
        ret;
      }
      `trChangeState(52, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `trChangeAnim(152);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 170]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    `stVal.hb.hitf1 = -8;
    `stVal.hb.hitt1 = 1;
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `setCtrl(false);
  `trChangeAnim(170);
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 175]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      if(#`getAction(175) == 0){
        `trChangeState(170, -1, -1);
        ret;
      }
      `trChangeAnim(175);
    }
    `stVal.hb.hitf1 = -8;
    `stVal.hb.hitt1 = 1;
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `setCtrl(false);
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 190]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(#`getAction(190) > 0) `trChangeAnim(190);
    if(`stVal.time == 0){
      `trChangeState(191, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `setCtrl(false);
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 191]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `trChangeState(0, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `setCtrl(false);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 5000]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    branch{
    cond `stVal.time == 0:
      switch(`gethitAnimtype()){
      case 4, 5:
        if(#`getAction(5047 + `gethitAnimtype()) > 0){
          `trChangeAnim(5047 + `gethitAnimtype());
          break, break;
        }
      case 3:<-
        `trChangeAnim(5030);
      default:
        `trChangeAnim(
          (`stVal.hb.groundtype == 1 ? 5000 : 5010) + `gethitAnimtype());
      }
    cond `stVal.time > 0:
      `trChangeAnim(`animno);
    }
    if(
      (`stVal.time == 0 && (`stVal.hb.yvel != 0.0 || `stVal.hb.fallf != 0))
      || `sysfvar[.fY] != 0.0)
    {
      `stVal.typ=.StTy::A;
    }
    if(`trHitShakeOver()$.v.isTrue()){
      if(`stVal.hb.yvel == 0.0 && `stVal.hb.fallf == 0){
        `trChangeState(5001, -1, -1);
        ret;
      }
      `trChangeState(5030, -1, -1);
      ret;
    }
    switch(`animno){
    case 5000, 5010:
      if(--`stVal.ps[0].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[0].p=);
      //ForceFeedback
    case 5001, 5011:
      if(--`stVal.ps[1].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[1].p=);
      //ForceFeedback
    case 5012, 5002, 5030:
      if(--`stVal.ps[2].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[2].p=);
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `stVal.ps.new(3);
  loop{index i = 0; do:
    `stVal.ps[i].p = 0;
  while ++i < 3:
  }
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5001]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0) `trHitVelSetX();
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeAnim(
        5005 + `gethitAnimtype() + (int)(`stVal.hb.groundtype == 2)*10);
    }
    if(`stVal.time >= `stVal.hb.slidetime) .v.setF(0.6)$`trVelMulX();
    if(`stVal.hb.hittime <= 0){
      `setXV(0.0);
      `defencemul = (float)`sysivar[.iDEFENCE] / 100.0;
      `trChangeState(0, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::S;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5010]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    branch{
    cond `stVal.time == 0:
      switch(`gethitAnimtype()){
      case 4, 5:
        if(#`getAction(5047 + `gethitAnimtype()) > 0){
          `trChangeAnim(5047 + `gethitAnimtype());
          break, break;
        }
      case 3:<-
        `trChangeAnim(5030);
      default:
        `trChangeAnim(5020 + `gethitAnimtype());
      }
    cond `stVal.time > 0:
      `trChangeAnim(`animno);
    }
    if(
      (`stVal.time == 0 && (`stVal.hb.yvel != 0.0 || `stVal.hb.fallf != 0))
      || `sysfvar[.fY] != 0.0)
    {
      `stVal.typ=.StTy::A;
    }
    if(`trHitShakeOver()$.v.isTrue()){
      if(`stVal.hb.yvel == 0.0 && `stVal.hb.fallf == 0){
        `trChangeState(5011, -1, -1);
        ret;
      }
      `trChangeState(5030, -1, -1);
      ret;
    }
    switch(`animno){
    case 5020:
      if(--`stVal.ps[0].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[0].p=);
      //ForceFeedback
    case 5021:
      if(--`stVal.ps[1].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[1].p=);
      //ForceFeedback
    case 5022:
      if(--`stVal.ps[2].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[2].p=);
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::C;
  `stVal.phy = .StTy::N;
  `stVal.ps.new(3);
  loop{index i = 0; do:
    `stVal.ps[i].p = 0;
  while ++i < 3:
  }
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5011]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0) `trHitVelSetX();
    if(`trAnimTime()$.v.toInt() == 0) `trChangeAnim(5025 + `gethitAnimtype());
    if(`stVal.time >= `stVal.hb.slidetime) .v.setF(0.6)$`trVelMulX();
    if(`stVal.hb.hittime <= 0){
      `setXV(0.0);
      `defencemul = (float)`sysivar[.iDEFENCE] / 100.0;
      `trChangeState(11, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::C;
  `stVal.phy = .StTy::C;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5020]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    branch{
    cond `stVal.time == 0:
      switch(`gethitAnimtype()){
      case 4, 5:
        if(#`getAction(5047 + `gethitAnimtype()) > 0){
          `trChangeAnim(5047 + `gethitAnimtype());
          break, break;
        }
      case 3:<-
        `trChangeAnim(5030);
      default:
        `trChangeAnim(
          (`stVal.hb.airtype == 1 ? 5000 : 5010) + `gethitAnimtype());
      }
    cond `stVal.time > 0:
      `trChangeAnim(`animno);
    }
    if(`trHitShakeOver()$.v.isTrue()){
      `trChangeState(5030, -1, -1);
      ret;
    }
    switch(`animno){
    case 5000, 5010:
      if(--`stVal.ps[0].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[0].p=);
      //ForceFeedback
    case 5001, 5011:
      if(--`stVal.ps[1].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[1].p=);
      //ForceFeedback
    case
      5012, 5002, 5030, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059
      :
      if(--`stVal.ps[2].p > 0) break;
      .v.setI(0)$`trSetPersistent(`stVal.ps[2].p=);
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `stVal.ps.new(3);
  loop{index i = 0; do:
    `stVal.ps[i].p = 0;
  while ++i < 3:
  }
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5030]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    .v.setF(`stVal.hb.getYaccel())$`trVelAddY();
    if(`stVal.time == 0){
      `trHitVelSetX();
      `trHitVelSetY();
    }
    if(
      `stVal.hb.hittime <= 0 || (
        `sysfvar[.fVY] > 0.0
        && `sysfvar[.fY] >= `sysfvar[.fAIR_GETHIT_GROUNDLEVEL]))
    {
      branch{
      cond `stVal.hb.fallf == 0:
        `trChangeState(5040, -1, -1);
      else:
        `trChangeState(5050, -1, -1);
      }
      ret;
    }
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(5035, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `setCtrl(false);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5035]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(
      `stVal.time == 0 && #`getAction(5035) > 0
      && !.m.inRange!int?(`animno, 5051, 5059) && `animno != 5090)
    {
      `trChangeAnim(5035);
    }
    .v.setF(`stVal.hb.getYaccel())$`trVelAddY();
    if(
      `stVal.hb.hittime <= 0 || `trAnimTime()$.v.toInt() == 0
      || (
        `sysfvar[.fVY] > 0.0
        && `sysfvar[.fY] >= `sysfvar[.fAIR_GETHIT_GROUNDLEVEL])
      || (`stVal.time == 0 && `animno != 5035))
    {
      branch{
      cond `stVal.hb.fallf == 0:
        `trChangeState(5040, -1, -1);
      else:
        `trChangeState(5050, -1, -1);
      }
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5040]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`sysivar[.iLIFE] <= 0){
      `trChangeState(5050, -1, -1);
      ret;
    }
    if(
      (`trAnimTime()$.v.toInt() == 0 && `animno != 5040)
      || (`stVal.time == 0 && `animno != 5035))
    {
      `trChangeAnim(5040);
    }
    if(`stVal.hb.hittime <= 0){
      `setCtrl(true);
      `stVal.mov = .MovTy::I;
    }
    .v.setF(`stVal.hb.getYaccel())$`trVelAddY();
    if(`sysfvar[.fVY] > 0.0 && `sysfvar[.fY] >= 0.0){
      `trChangeState(52, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5050]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(
      (`trAnimTime()$.v.toInt() == 0 && `animno == 5035) || (
        `stVal.time == 0 && `animno != 5035
        && !.m.inRange!int?(`animno, 5051, 5059)
        && !.m.inRange!int?(`animno, 5061, 5069) && `animno != 5090))
    {
      `trChangeAnim(5050);
    }
    if(
      --`stVal.ps[0].p <= 0 && .m.inRange!int?(`animno, 5050, 5059)
      && `sysfvar[.fVY] >= (`animno == 5050 ? 1.0 : -2.0)
      && #`getAction(`animno + 10) > 0)
    {
      .v.setI(0)$`trSetPersistent(`stVal.ps[0].p=);
      `trChangeAnim(`animno + 10);
    }
    .v.setF(`stVal.hb.getYaccel())$`trVelAddY();
    if(
      `sysivar[.iLIFE] > 0 && `trCanRecover()$.v.isTrue()
      && `trCommand("recovery")$.v.isTrue())
    {
      branch{
      cond
        `sysfvar[.fVY] > 0.0
        && `sysfvar[.fY]
        >= `sysfvar[.fAIR_GETHIT_GROUNDRECOVER_GROUND_THRESHOLD]
        :
        `trChangeState(5200, -1, -1);
        ret;
      cond `sysfvar[.fVY] > `sysfvar[.fAIR_GETHIT_AIRRECOVER_THRESHOLD]:
        `trChangeState(5210, -1, -1);
        ret;
      }
    }
    if(
      `sysfvar[.fVY] > 0.0 && `sysfvar[.fY] >= (
          .m.inRange!int?(`animno, 5051, 5059)
          || .m.inRange!int?(`animno, 5061, 5069) ? 0.0 : 25.0))
    {
      `trChangeState(5100, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `stVal.ps.new(1);
  `stVal.ps[0].p = 0;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5070]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    `trChangeAnim(5070);
    if(`trHitShakeOver()$.v.isTrue()){
      `trChangeState(5071, -1, -1);
      ret;
    }
    if(`stVal.time == 0){
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5071]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `trHitVelSetX();
      `trHitVelSetY();
    }
    .v.setF(`stVal.hb.getYaccel())$`trVelAddY();
    if(
      `sysfvar[.fVY] > 0.0
      && `sysfvar[.fY] >= `sysfvar[.fAIR_GETHIT_TRIP_GROUNDLEVEL])
    {
      `trChangeState(5110, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5080]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `sysivar[2] = `stVal.hb.yvel == 0.0 ? 5080 : 5090;
      if(
        (
          .m.inRange!int?(`animno, 5081, 5089)
          || .m.inRange!int?(`animno, 5111, 5119))
        && #`getAction(`sysivar[2] + `animno%10) > 0)
      {
        `sysivar[2] += `animno%10;
      }
      if(`sysivar[2] == 5090 && #`getAction(5090) == 0) `sysivar[2] = 5030;
    }
    `trChangeAnim(`sysivar[2]);
    if(`trHitShakeOver()$.v.isTrue()){
      branch{
      cond `stVal.hb.yvel == 0.0:
        `trChangeState(5081, -1, -1);
      else:
        `trChangeState(5030, -1, -1);
      }
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::L;
  `stVal.phy = .StTy::N;
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5081]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      `trHitVelSetX();
      `sysivar[0] = 1;
    }
    if(`stVal.hb.hittime <= 0){
      `setXV(0.0);
      `trChangeState(5110, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::L;
  `stVal.phy = .StTy::C;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5100]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    switch(`stVal.time){
    case 0:
      if(`stVal.hb.fall.yvelocity == 0.0 && `sysfvar[.fVX] > 1.0){
        `setXV(1.0);
      }
      .stage.envShake.time = `stVal.hb.fall.envshake_time;
      .stage.envShake.freq = (`stVal.hb.fall.envshake_freq / 180.0) * .m.PI;
      .stage.envShake.ampl = `stVal.hb.fall.envshake_ampl;
      .stage.envShake.phase = `stVal.hb.fall.envshake_phase;
      `sysivar[1] = (int).m.floor(`sysfvar[.fVY]);
      branch{
      cond
        (
          !.m.inRange!int?(`animno, 5051, 5059)
          && !.m.inRange!int?(`animno, 5061, 5069))
        || #`getAction(5100 + `animno%10) == 0
        :
        `trChangeAnim(5100);
      else:
        `trChangeAnim(5100 + `animno%10);
      }
      .v.setF(0.0)$`trSetY();
      `setYV(0.0);
      .v.setF(0.75)$`trVelMulX();
      if(`stVal.hb.fall.yvelocity == 0.0){
        `trChangeState(5110, -1, -1);
        ret;
      }
    case 1:
      {
        index idx;
        ^&.Explod e = `newExplod(idx=);
        if(#e > 0){
          e~sprpriority = -5;
          e~ownpal = 1;
          e~ani =
            .fight~getAction(
              60 + (int)(`sysivar[1] > 5) + (int)(`sysivar[1] > 14));
          e~offsetx = 0.0;
          e~offsety = 0.0;
          e~ontop = (int)(`sysivar[1] > 14);
          e~setPos(`=);
          e~player=`id;
          `insertExplod(idx);
        }
        `playSound(
          true, false, false, 7,
          (int)(`sysivar[1] > 5) + (int)(`sysivar[1] > 14), -1,
          `sysivar[.iVOLUME], 0.0, 1.0, `sysfvar[.fX...fX+1]);
      }
    case 3:
      `trHitFallDamage();
    }
    `sysivar[.iSPECIALFLAG] |= .lsPOSFREEZEX | .lsPOSFREEZEY;
    if(`trAnimTime()$.v.toInt() == 0){
      `trChangeState(5101, -1, -1);
      ret;
    }
    if(`stVal.time == 0){
      //ForceFeedback
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::L;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5101]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    switch(`stVal.time){
    case 0:
      branch{
      cond
        !.m.inRange!int?(`animno, 5101, 5109)
        || #`getAction(5160 + `animno%10) == 0
        :
        `trChangeAnim(5160);
      else:
        `trChangeAnim(5160 + `animno%10);
      }
      `trHitFallVel();
      .v.setF(`sysfvar[.fDOWN_BOUNCE_OFFSETY])$`trSetY();
      .v.setF(`sysfvar[.fDOWN_BOUNCE_OFFSETX])$`trAddX();
      .v.setF(0.75)$`trVelMulX();
    }
    .v.setF(`sysfvar[.fDOWN_BOUNCE_YACCEL])$`trVelAddY();
    if(
      `sysfvar[.fVY] > 0.0
      && `sysfvar[.fY] >= `sysfvar[.fDOWN_BOUNCE_GROUNDLEVEL])
    {
      `trChangeState(5110, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::L;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5110]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(
      --`stVal.ps[0].p <= 0 && #`getAction(5110 + `animno%10) > 0
      && .m.inRange!int?(`animno, 5081, 5089))
    {
      .v.setI(0)$`trSetPersistent(`stVal.ps[0].p=);
      `trChangeAnim(5110 + `animno%10);
    }
    if(`stVal.time == 0){
      .stage.envShake.time = `stVal.hb.fall.envshake_time;
      .stage.envShake.freq = (`stVal.hb.fall.envshake_freq / 180.0) * .m.PI;
      .stage.envShake.ampl = `stVal.hb.fall.envshake_ampl;
      .stage.envShake.phase = `stVal.hb.fall.envshake_phase;
      if(!.m.inRange!int?(`animno, 5110, 5119)) branch{
      cond
        !.m.inRange!int?(`animno, 5161, 5169)
        || #`getAction(5170 + `animno%10) == 0
        :
        `trChangeAnim(5170);
      else:
        `trChangeAnim(5170 + `animno%10);
      }
      `trHitFallDamage();
      .v.setF(0.0)$`trSetY();
      if(`stVal.hb.fall.yvelocity != 0.0){
        `sysivar[1] = (int).m.floor(`sysfvar[.fVY]);
      }
      if(`sysivar[0] == 0){
        `playSound(
          true, false, false, 7,
          (int)(`sysivar[1] > 5) + (int)(`sysivar[1] > 14), -1,
          `sysivar[.iVOLUME], 0.0, 1.0, `sysfvar[.fX...fX+1]);
        index idx;
        ^&.Explod e = `newExplod(idx=);
        if(#e > 0){
          e~sprpriority = -5;
          e~ownpal = 1;
          e~ani =
            .fight~getAction(
              60 + (int)(`sysivar[1] > 5) + (int)(`sysivar[1] > 14));
          e~offsetx = 0.0;
          e~offsety = 0.0;
          e~ontop = (int)(`sysivar[1] > 14);
          e~setPos(`=);
          e~player=`id;
          `insertExplod(idx);
        }
      }
      `setYV(0.0);
    }
    if(
      --`stVal.ps[1].p <= 0 && .m.inRange!int?(`animno, 5171, 5171)
      && #`getAction(5110 + `animno%10) > 0 && (
        `trAnimTime()$.v.toInt() == 0 || `sysivar[0] != 0))
    {
      .v.setI(0)$`trSetPersistent(`stVal.ps[1].p=);
      `trChangeAnim(5110 + `animno%10);
    }
    if(
      --`stVal.ps[2].p <= 0 && !.m.inRange!int?(`animno, 5111, 5119) && (
        `trAnimTime()$.v.toInt() == 0 || `sysivar[0] != 0))
    {
      .v.setI(0)$`trSetPersistent(`stVal.ps[2].p=);
      `trChangeAnim(5110);
    }
    if(
      `sysivar[.iLIFE] <= 0 && (
        `trAnimTime()$.v.toInt() == 0 || `sysivar[0] != 0
        || .m.inRange!int?(`animno, 5110, 5119)))
    {
      `trChangeState(5150, -1, -1);
      ret;
    }
    if(`stVal.time == 0){
      `sysivar[0] = 0;
      branch{
      cond `sysivar[.iLIFE] > 0:
        //ForceFeedback
      else:
        //ForceFeedback
      }
    }
    .v.setF(0.85)$`trVelMulX();
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::L;
  `stVal.phy = .StTy::N;
  `stVal.ps.new(3);
  loop{index i = 0; do:
    `stVal.ps[i].p = 0;
  while ++i < 3:
  }
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5120]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      branch{
      cond
        !.m.inRange!int?(`animno, 5111, 5119)
        || #`getAction(5120 + `animno%10) == 0
        :
        `trChangeAnim(5120);
      else:
        `trChangeAnim(5120 + `animno%10);
      }
      `setXV(0.0);
    }
    `stVal.hb.hitf1 = -8;
    `stVal.hb.hitt1 = 1;
    if(`trAnimTime()$.v.toInt() == 0){
      `trHitFallSet(1, .com.FERR, .com.FERR);
      `stVal.hb.hitf1 = -9345;
      `stVal.hb.hitt1 = 12;
      `stVal.hb.hitf2 = -8;
      `stVal.hb.hitt2 = 3;
      `trChangeState(0, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::L;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 5150]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0){
      branch{
      cond
        (
          !.m.inRange!int?(`animno, 5111, 5119)
          && !.m.inRange!int?(`animno, 5171, 5179))
        || #`getAction(5140 + `animno%10) == 0
        :
        if(#`getAction(5140) > 0) `trChangeAnim(5140);
      else:
        `trChangeAnim(5140 + `animno%10);
      }
      if(
        !.m.inRange!int?(`animno, 5140, 5149)
        && !.m.inRange!int?(`animno, 5110, 5119))
      {
        `trChangeAnim(5110);
      }
    }
    if(
      --`stVal.ps[0].p <= 0 && `trMatchOver()$.v.isTrue()
      && .m.inRange!int?(`animno, 5140, 5149) && #`getAction(`animno + 10) > 0)
    {
      .v.setI(0)$`trSetPersistent(`stVal.ps[0].p=);
      `trChangeAnim(`animno + 10);
    }
    .v.setF(0.85)$`trVelMulX();
    if(
      --`stVal.ps[1].p <= 0
      && `sysfvar[.fVX] < `sysfvar[.fDOWN_FRICTION_THRESHOLD])
    {
      .v.setI(0)$`trSetPersistent(`stVal.ps[1].p=);
      `setXV(0.0);
    }
    `stVal.hb.hitf1 = -8;
    `stVal.hb.hitt1 = 1;
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::L;
  `stVal.phy = .StTy::N;
  `stVal.ps.new(2);
  loop{index i = 0; do:
    `stVal.ps[i].p = 0;
  while ++i < 2:
  }
  `sprpriority = -3;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5200]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`animno == 5035 && `trAnimTime()$.v.toInt() == 0) `trChangeAnim(5050);
    .v.setF(`stVal.hb.getYaccel())$`trVelAddY();
    if(
      `sysfvar[.fVY] > 0.0
      && `sysfvar[.fY] >= `sysfvar[.fAIR_GETHIT_GROUNDRECOVER_GROUNDLEVEL])
    {
      `trSelfState(5201, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5201]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    switch(`stVal.time){
    case 0:
      if(`trP2DistX()$.v.toFloat() < -5.0) `setFacing(-`facing);
      `setXV(`sysfvar[.fAIR_GETHIT_GROUNDRECOVERX]);
      `setYV(`sysfvar[.fAIR_GETHIT_GROUNDRECOVERY]);
      .v.setF(0.0)$`trSetY();
      {
        ^&.com.PalFX fx = `getPalfx();
        fx~clear();
        fx~time = 3;
        fx~addr = 128;
        fx~addg = 128;
        fx~addb = 128;
      }
    case 1:
      {
        index idx;
        ^&.Explod e = `newExplod(idx=);
        if(#e > 0){
          e~sprpriority = -5;
          e~ownpal = 1;
          e~ani = .fight~getAction(60);
          e~offsetx = 0.0;
          e~offsety = 0.0;
          e~ontop = 0;
          e~setPos(`=);
          e~player=`id;
          `insertExplod(idx);
        }
      }
    }
    `stVal.hb.hitf1 = -8;
    `stVal.hb.hitt1 = 1;
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::A;
  `trChangeAnim(5200);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::H;
}


[Statedef 5210]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    switch(`stVal.time){
    case 0:
      {
        ^&.com.PalFX fx = `getPalfx();
        fx~clear();
        fx~time = 3;
        fx~addr = 128;
        fx~addg = 128;
        fx~addb = 128;
      }
      `sysivar[.iSPECIALFLAG] |= .lsPOSFREEZEX | .lsPOSFREEZEY;
      if(`trP2DistX()$.v.toFloat() < -20.0) `setFacing(-`facing);
      `stVal.hb.hitf1 = -8;
      `stVal.hb.hitt1 = 15;
    case 4:
      .v.setF(0.8)$`trVelMulX();
      .v.setF(0.8)$`trVelMulY();
      .v.setF(`sysfvar[.fAIR_GETHIT_AIRRECOVER_ADDX])$`trVelAddX();
      .v.setF(`sysfvar[.fAIR_GETHIT_AIRRECOVER_ADDY])$`trVelAddY();
      if(`sysfvar[.fVY] > 0.0) .v.setF(0.5)$`trVelMulY();
      if(`sysfvar[.fVY] > -3.0) .v.setF(-2.0)$`trVelAddY();
      if(`sysfvar[.fVY] > -2.0) .v.setF(-1.0)$`trVelAddY();
      if(`trCommand("holdup")$.v.isTrue()){
        .v.setF(`sysfvar[.fAIR_GETHIT_AIRRECOVER_UP])$`trVelAddY();
      }
      if(`trCommand("holddown")$.v.isTrue()){
        .v.setF(`sysfvar[.fAIR_GETHIT_AIRRECOVER_DOWN])$`trVelAddY();
      }
      if(`trCommand("holdfwd")$.v.isTrue()){
        .v.setF(`sysfvar[.fAIR_GETHIT_AIRRECOVER_FWD])$`trVelAddX();
      }
      if(`trCommand("holdback")$.v.isTrue()){
        .v.setF(`sysfvar[.fAIR_GETHIT_AIRRECOVER_BACK])$`trVelAddX();
      }
    case 20:
      `setCtrl(true);
    }
    if(`stVal.time >= 4){
      .v.setF(`sysfvar[.fAIR_GETHIT_AIRRECOVER_YACCEL])$`trVelAddY();
    }
    if(`sysfvar[.fVY] > 0.0 && `sysfvar[.fY] >= 0.0){
      `trChangeState(52, -1, 1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::A;
  `stVal.phy = .StTy::N;
  `trChangeAnim(5210);
  `setCtrl(false);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 5500]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(`stVal.time == 0 && #`getAction(5500) > 0) `trChangeAnim(5500);
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `setCtrl(false);
  `trChangeAnim(5300);
  `setXV(0.0);
  `setYV(0.0);
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}


[Statedef 5900]
SSZ_CODE:
void c.Char::s##_@@P()
{
  if(!`isHitPaused()){
    if(.com.rexisted[`playerno&1] == 0){
      `rangeSetIVar(0, 59, 0);
      `rangeSetFVar(0, 39, 0.0);
    }
    if(.com.round == 1){
      `trChangeState(190, -1, -1);
      ret;
    }
  }
}
void c.Char::s##_@@PInit()
{
  `state = `s##_@@P;
  `stVal.typ = .StTy::S;
  `stVal.phy = .StTy::N;
  `clearHitCount();
  `clearHitDef();
  `clearMoveHit();
  `stVal.juggle = 0;
}
void c.Char::s##_@@PSet()
{
  `state = `s##_@@PInit;
  `stVal.mov = .MovTy::I;
}

